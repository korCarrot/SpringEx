
//      <Gradle에서 사용되는 주요 종속성 구성 구문>
//implementation: implementation 구문은 프로덕션 코드에서 사용되는 종속성을 정의합니다. 이 종속성은 컴파일 시에 사용되며, 빌드된 애플리케이션에 포함
//api: api 구문은 모듈의 API로 노출되는 종속성을 정의합니다. 이 종속성은 컴파일 시에 사용되며, 모듈의 API로 사용할 수 있습니다. 이 구문은 종속성이 자체 API를 제공하고 다른 모듈에서 사용될 것으로 예상될 때 사용됩니다. 다른 모듈이 종속성의 API에 접근해야 하는 경우에만 사용되어야 합니다.
//annotationProcessor: annotationProcessor 구문은 컴파일 시에만 사용되는 프로세서를 정의
//compileOnly: compileOnly 구문은 컴파일 시에만 사용되는 종속성을 정의합니다. 이 종속성은 런타임에는 포함되지 않으며 컴파일 시에만 필요
//runtimeOnly: runtimeOnly 구문은 런타임에만 사용되는 종속성을 정의합니다. 이 종속성은 컴파일 시에는 포함되지 않으며 런타임에만 필요. 주로 실행 중에 특정 라이브러리가 필요할 때  사용.
//testImplementation: testImplementation 구문은 테스트 코드에서만 사용되는 종속성을 정의합니다. 이 종속성은 테스트 코드에서만 사용되며, 실제 애플리케이션 코드에는 포함되지 않습니다.
//testCompileOnly: testCompileOnly 구문은 테스트 코드의 컴파일 시에만 사용되는 종속성을 정의합니다. 이 종속성은 테스트 코드의 컴파일 시에만 필요하며 런타임에는 포함되지 않습니다.

//  <implementation, annotationProcessor, compileOnly 의 차이점>
// implementation은 주로 빌드된 애플리케이션에 포함될 종속성을 정의하는 데 사용되고, annotationProcessor는 애노테이션 프로세서를 사용할 때 필요한 종속성을 정의하는 데 사용되며, compileOnly는 컴파일 시에만 필요한 종속성을 정의하는 데 사용됩니다.

plugins {
    id 'java'
    id 'war'
}

group 'com.green'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')

    //스프링 라이브러리 core, context, test
    implementation group: 'org.springframework', name: 'spring-core', version: '5.3.33'
    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.33'
    implementation group: 'org.springframework', name: 'spring-test', version: '5.3.33'

    //spring-web-mvc
    implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.3.19'


    /*  VO를  DTO를 변환하거나  DTO를 VO로 변환해주는 라이브러리 */
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'

    //DTO의 검증을 위한 Validate 관련 라이브러리
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.2.1.Final'

    //DataSource 구성(마리아 DB)
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.3'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'

    // jdbc, transaction
    implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.3.19'
    implementation group: 'org.springframework', name: 'spring-tx', version: '5.3.19'

    // mybatis 관련
    implementation 'org.mybatis:mybatis:3.5.9'
    implementation 'org.mybatis:mybatis-spring:2.0.7'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    //롬복 관련
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    //Log4J2
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.2'

    //JSTL
    implementation group: 'jstl', name: 'jstl', version: '1.2'

    //mybatis 관련
    implementation 'org.mybatis:mybatis:3.5.9'
    implementation 'org.mybatis:mybatis-spring:2.0.7'



}

test {
    useJUnitPlatform()
}